{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/dockertest/webapp/components/login.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport { Wrapper, FlexForm, Input } from \"../styles/main\";\nconst initialValues = {\n  username: \"\",\n  magicword: \"\"\n};\n\nconst Login = () => {\n  const [values, handleChange] = useForm(initialValues);\n  const {\n    0: tokenSent,\n    1: setTokenSent\n  } = useState(false);\n\n  function handleGenerateAuth(values) {\n    event.preventDefault();\n    setTokenSent(true);\n  }\n\n  function handleLogin(values) {\n    console.log(\"login\");\n  }\n\n  return __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Login\"), !tokenSent ? __jsx(FlexForm, {\n    onSubmit: () => handleGenerateAuth(values),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"text\",\n    placeholder: \"username\",\n    name: \"username\",\n    value: values.username,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Get Token\")) : __jsx(FlexForm, {\n    onSubmit: () => handleLogin(values),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"text\",\n    placeholder: \"magic word\",\n    name: \"username\",\n    value: values.magicword,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"log in\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/rsbear/dev/dockertest/webapp/components/login.tsx"],"names":["React","useState","useForm","Wrapper","FlexForm","Input","initialValues","username","magicword","Login","values","handleChange","tokenSent","setTokenSent","handleGenerateAuth","event","preventDefault","handleLogin","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,KAA5B,QAAyC,gBAAzC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,KAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBT,OAAO,CAACI,aAAD,CAAtC;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASa,kBAAT,CAA4BJ,MAA5B,EAAoC;AAClCK,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASI,WAAT,CAAqBP,MAArB,EAA6B;AAC3BQ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAED,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,CAACP,SAAD,GACC,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,MAAME,kBAAkB,CAACJ,MAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEA,MAAM,CAACH,QAJhB;AAKE,IAAA,QAAQ,EAAEI,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CADD,GAYC,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,MAAMM,WAAW,CAACP,MAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEA,MAAM,CAACF,SAJhB;AAKE,IAAA,QAAQ,EAAEG,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CAdJ,CADF;AA4BD,CAzCD;;AA2CA,eAAeF,KAAf","sourcesContent":["import React, { FC, useState } from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport { Wrapper, FlexForm, Input } from \"../styles/main\";\n\nconst initialValues = {\n  username: \"\",\n  magicword: \"\"\n};\n\nconst Login: FC<any> = () => {\n  const [values, handleChange] = useForm(initialValues);\n  const [tokenSent, setTokenSent] = useState(false);\n\n  function handleGenerateAuth(values) {\n    event.preventDefault();\n    setTokenSent(true);\n  }\n\n  function handleLogin(values) {\n    console.log(\"login\");\n  }\n\n  return (\n    <Wrapper>\n      <h3> Login</h3>\n      {!tokenSent ? (\n        <FlexForm onSubmit={() => handleGenerateAuth(values)}>\n          <Input\n            type=\"text\"\n            placeholder=\"username\"\n            name=\"username\"\n            value={values.username}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Get Token</button>\n        </FlexForm>\n      ) : (\n        <FlexForm onSubmit={() => handleLogin(values)}>\n          <Input\n            type=\"text\"\n            placeholder=\"magic word\"\n            name=\"username\"\n            value={values.magicword}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">log in</button>\n        </FlexForm>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}