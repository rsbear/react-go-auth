{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/dockertest/webapp/styles/main.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { jsx, css, Global } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\n/** @jsx jsx */\n\nexport const globalStyles = jsx(Global, {\n  styles: css`\n      html,\n      body {\n        display: flex;\n        flex-flow: column;\n        align-items: center;\n        padding: 0;\n        margin: 0;\n        min-height: 100%;\n        font-family: Helvetica, Arial, sans-serif;\n        font-size: 24px;\n      }\n    `,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n});\nconst row = css`\n  display: flex;\n  flex-flow: row;\n`;\nconst column = css`\n  display: flex;\n  flex-direction: column;\n`;\nexport const flex = {\n  row,\n  column\n};\nconst wrapStyles = css`\n  padding: 40px 80px;\n  border-top: solid 1px rgba(0, 0, 0, 0.1);\n  border-bottom: solid 1px rgba(0, 0, 0, 0.1);\n`;\nexport const Wrapper = styled(\"div\")`\n  ${wrapStyles}\n`;\nexport const FlexForm = styled.form`\n  /* ${props => props.column && flex.column}\n  ${props => props.row && flex.row} */\n  ${flex.column}\n`;\nconst inputBox = css`\n  outline: 0;\n  border-radius: 4px;\n  border: solid 1px rgba(0, 0, 0, 0.1);\n`;\nexport const Input = props => {\n  return jsx(\"div\", {\n    css: [flex.row, inputBox],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, jsx(\"input\", _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/rsbear/dev/dockertest/webapp/styles/main.tsx"],"names":["jsx","css","Global","styled","globalStyles","row","column","flex","wrapStyles","Wrapper","FlexForm","form","props","inputBox","Input"],"mappings":";;;;;;AAAA,SAAoBA,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,gBAA5C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA;;AAEA,OAAO,MAAMC,YAAY,GACvB,IAAC,MAAD;AACE,EAAA,MAAM,EAAEH,GAAI;;;;;;;;;;;;KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADK;AAkBP,MAAMI,GAAG,GAAGJ,GAAI;;;CAAhB;AAIA,MAAMK,MAAM,GAAGL,GAAI;;;CAAnB;AAKA,OAAO,MAAMM,IAAI,GAAG;AAClBF,EAAAA,GADkB;AAElBC,EAAAA;AAFkB,CAAb;AAKP,MAAME,UAAU,GAAGP,GAAI;;;;CAAvB;AAMA,OAAO,MAAMQ,OAAO,GAAGN,MAAM,CAAC,KAAD,CAAQ;IACjCK,UAAW;CADR;AAIP,OAAO,MAAME,QAAQ,GAAGP,MAAM,CAACQ,IAAK;OAC5BC,KAAD,IAAgBA,KAAK,CAACN,MAAN,IAAgBC,IAAI,CAACD,MAAO;IAC9CM,KAAD,IAAgBA,KAAK,CAACP,GAAN,IAAaE,IAAI,CAACF,GAAI;IACtCE,IAAI,CAACD,MAAO;CAHT;AAMP,MAAMO,QAAQ,GAAGZ,GAAI;;;;CAArB;AAMA,OAAO,MAAMa,KAAK,GAAGF,KAAK,IAAI;AAC5B,SACE;AAAK,IAAA,GAAG,EAAE,CAACL,IAAI,CAACF,GAAN,EAAWQ,QAAX,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0BAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CANM","sourcesContent":["import { keyframes, jsx, css, Global } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\n/** @jsx jsx */\n\nexport const globalStyles = (\n  <Global\n    styles={css`\n      html,\n      body {\n        display: flex;\n        flex-flow: column;\n        align-items: center;\n        padding: 0;\n        margin: 0;\n        min-height: 100%;\n        font-family: Helvetica, Arial, sans-serif;\n        font-size: 24px;\n      }\n    `}\n  />\n);\n\nconst row = css`\n  display: flex;\n  flex-flow: row;\n`;\nconst column = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const flex = {\n  row,\n  column\n};\n\nconst wrapStyles = css`\n  padding: 40px 80px;\n  border-top: solid 1px rgba(0, 0, 0, 0.1);\n  border-bottom: solid 1px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Wrapper = styled(\"div\")`\n  ${wrapStyles}\n`;\n\nexport const FlexForm = styled.form`\n  /* ${(props: any) => props.column && flex.column}\n  ${(props: any) => props.row && flex.row} */\n  ${flex.column}\n`;\n\nconst inputBox = css`\n  outline: 0;\n  border-radius: 4px;\n  border: solid 1px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Input = props => {\n  return (\n    <div css={[flex.row, inputBox]}>\n      <input {...props} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}