{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from \"react\";\nimport { Wrapper, FlexForm, Input } from \"../styles/main\";\nconst initialState = {\n  email: \"\",\n  username: \"\"\n};\n\nconst reducer = (state, {\n  field,\n  value\n}) => {\n  return _objectSpread({}, state, {\n    [field]: value\n  });\n};\n\nconst Signup = () => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n\n  function handleChange(e) {\n    dispatch({\n      field: e.target.name,\n      value: e.target.value\n    });\n  }\n\n  return __jsx(Wrapper, null, __jsx(\"h1\", null, \"Sign up\"), __jsx(FlexForm, {\n    onSubmit: () => {}\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"email\",\n    value: state.email,\n    placeholder: \"Email\",\n    onChange: e => handleChange(e)\n  }), __jsx(Input, {\n    type: \"text\",\n    name: \"username\",\n    value: state.username,\n    placeholder: \"Username\",\n    onChange: e => handleChange(e)\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Get Token\")));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}