{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rsbear/dev/dockertest/webapp/components/login.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport { Wrapper, FlexForm, Input } from \"../styles/main\";\nimport { useCreateLoginAuthMutation, useLoginMutation } from \"../generated/graphql\";\nvar initialValues = {\n  email: \"\",\n  secret: \"\"\n};\n\nvar Login = function Login() {\n  var _useForm = useForm(initialValues),\n      _useForm2 = _slicedToArray(_useForm, 2),\n      values = _useForm2[0],\n      handleChange = _useForm2[1];\n\n  var _useState = useState(false),\n      tokenSent = _useState[0],\n      setTokenSent = _useState[1];\n\n  var _useCreateLoginAuthMu = useCreateLoginAuthMutation(),\n      _useCreateLoginAuthMu2 = _slicedToArray(_useCreateLoginAuthMu, 1),\n      createLoginAuth = _useCreateLoginAuthMu2[0];\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 1),\n      login = _useLoginMutation2[0];\n\n  function handleGenerateAuth(values) {\n    var res;\n    return _regeneratorRuntime.async(function handleGenerateAuth$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(createLoginAuth({\n              variables: {\n                email: values.email\n              }\n            }));\n\n          case 4:\n            res = _context.sent;\n            console.log(res);\n            setTokenSent(true);\n            _context.next = 11;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]]);\n  }\n\n  function handleLogin(values) {\n    var res;\n    return _regeneratorRuntime.async(function handleLogin$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            event.preventDefault();\n            console.log(\" values \".concat(values));\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(login({\n              variables: {\n                secret: values.secret,\n                email: \"client@client.com\"\n              }\n            }));\n\n          case 5:\n            res = _context2.sent;\n            console.log(res);\n            _context2.next = 11;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 9]]);\n  }\n\n  return __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Login\"), !tokenSent ? __jsx(FlexForm, {\n    onSubmit: function onSubmit() {\n      return handleGenerateAuth(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"text\",\n    placeholder: \"email\",\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Get Token\")) : __jsx(FlexForm, {\n    onSubmit: function onSubmit() {\n      return handleLogin(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"text\",\n    placeholder: \"magic word\",\n    name: \"secret\",\n    value: values.secret,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"log in\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/rsbear/dev/dockertest/webapp/components/login.tsx"],"names":["React","useState","useForm","Wrapper","FlexForm","Input","useCreateLoginAuthMutation","useLoginMutation","initialValues","email","secret","Login","values","handleChange","tokenSent","setTokenSent","createLoginAuth","login","handleGenerateAuth","event","preventDefault","variables","res","console","log","handleLogin"],"mappings":"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","sourcesContent":["import React, { FC, useState } from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport { Wrapper, FlexForm, Input } from \"../styles/main\";\nimport {\n  useCreateLoginAuthMutation,\n  useLoginMutation\n} from \"../generated/graphql\";\n\nconst initialValues = {\n  email: \"\",\n  secret: \"\"\n};\n\nconst Login: FC<any> = () => {\n  const [values, handleChange] = useForm(initialValues);\n  const [tokenSent, setTokenSent] = useState(false);\n  const [createLoginAuth] = useCreateLoginAuthMutation();\n  const [login] = useLoginMutation();\n\n  async function handleGenerateAuth(values) {\n    event.preventDefault();\n    try {\n      const res = await createLoginAuth({\n        variables: {\n          email: values.email\n        }\n      });\n      console.log(res);\n      setTokenSent(true);\n    } catch (err) {\n      //fail gracefully\n    }\n  }\n\n  async function handleLogin(values) {\n    event.preventDefault();\n    console.log(` values ${values}`);\n    try {\n      const res = await login({\n        variables: {\n          secret: values.secret,\n          email: \"client@client.com\"\n        }\n      });\n      console.log(res);\n    } catch (err) {\n      // fail smooth\n    }\n  }\n\n  return (\n    <Wrapper>\n      <h3> Login</h3>\n      {!tokenSent ? (\n        <FlexForm onSubmit={() => handleGenerateAuth(values)}>\n          <Input\n            type=\"text\"\n            placeholder=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Get Token</button>\n        </FlexForm>\n      ) : (\n        <FlexForm onSubmit={() => handleLogin(values)}>\n          <Input\n            type=\"text\"\n            placeholder=\"magic word\"\n            name=\"secret\"\n            value={values.secret}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">log in</button>\n        </FlexForm>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}