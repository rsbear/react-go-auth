{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/dockertest/webapp/pages/_document.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Head, Main, NextScript } from \"next/document\";\nimport { extractCritical } from \"@emotion/server\";\n\nconst DocFC = props => {\n  console.log(props);\n  return __jsx(\"html\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), __jsx(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(NextScript, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nDocFC.getInitialProps = ({\n  renderPage\n}) => {\n  const page = renderPage();\n  const styles = extractCritical(page.html);\n  return _objectSpread({}, page, {}, styles);\n};\n\nexport default class MyDocument extends Document {\n  render() {\n    return __jsx(DocFC, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/rsbear/dev/dockertest/webapp/pages/_document.tsx"],"names":["Document","Head","Main","NextScript","extractCritical","DocFC","props","console","log","getInitialProps","renderPage","page","styles","html","MyDocument","render"],"mappings":";;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,eAAT,QAAgC,iBAAhC;;AAMA,MAAMC,KAAoB,GAAGC,KAAK,IAAI;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPF,CADF;AAcD,CAhBD;;AAkBAD,KAAK,CAACI,eAAN,GAAwB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC1C,QAAMC,IAAI,GAAGD,UAAU,EAAvB;AACA,QAAME,MAAM,GAAGR,eAAe,CAACO,IAAI,CAACE,IAAN,CAA9B;AACA,2BAAYF,IAAZ,MAAqBC,MAArB;AACD,CAJD;;AAMA,eAAe,MAAME,UAAN,SAAyBd,QAAzB,CAAkC;AAC/Ce,EAAAA,MAAM,GAAG;AACP,WAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAH8C","sourcesContent":["import Document, { Head, Main, NextScript } from \"next/document\";\nimport { extractCritical } from \"@emotion/server\";\n\ninterface GetProps<P = {}> extends React.SFC<P> {\n  getInitialProps?: (context: any) => Promise<P>;\n}\n\nconst DocFC: GetProps<any> = props => {\n  console.log(props);\n  return (\n    <html>\n      <Head>\n        {/* <style\n          data-emotion-css={props.ids.join(\" \")}\n          dangerouslySetInnerHTML={{ __html: props.css }}\n        /> */}\n      </Head>\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </html>\n  );\n};\n\nDocFC.getInitialProps = ({ renderPage }) => {\n  const page = renderPage();\n  const styles = extractCritical(page.html);\n  return { ...page, ...styles };\n};\n\nexport default class MyDocument extends Document {\n  render() {\n    return <DocFC />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}